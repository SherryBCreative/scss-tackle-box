// ############################################################################
// Paddings and Margins
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
///
$_tb-paddings-margins-map: (
    margin:(),
    padding:(),
);

// ----------------------------------------------------------------------------
///
@function tb-mg-pd($size, $scale, $type, $direction  ) {

  @if tb-map-get-deep($_tb-paddings-margins-map, $type, $scale) {
    @return tb-map-get-deep($_tb-paddings-margins-map, $type, $scale, $size);
  } //
  @else {
    @if map_get($_tb-modular-scales, $scale) {
      $map: ();
      @each $size in $tb-size-suffixes {
        $size-name: nth($size, 1);
        $index: map-get($tb-size-suffixes, $size-name);
        $base: tb-map-get-deep($_tb-paddings-margins, $type, $direction, base);
        $value: tb-scale(
                $index,
                $base,
                map-get($_tb-modular-scales, $scale)
        );
        $map: tb-map-merge-deep($map,
            (#{$type}:(
                #{$direction}:(
                    #{$scale}:(
                        #{$size-name}:$value
                    )
                )
            ))
        );
      }

      $_tb-paddings-margins-map: tb-map-merge-deep($_tb-paddings-margins-map, $map) !global;
      @return tb-map-get-deep($_tb-paddings-margins-map, $type, $direction, $scale, $size)
    } //
    @else {
      @error '`#{$scale}` does not exist in $_tb-modular-scales';
    }
  }
}

// ----------------------------------------------------------------------------
///
@function tb-mg-v(
  $size: normal,
  $scale: tb-map-get-deep($_tb-paddings-margins, margin, vertical, scale),
  $type: margin,
  $direction: vertical ) {
  @return tb-mg-pd($size, $scale, $type, $direction);
}

// ----------------------------------------------------------------------------
///
@function tb-mg-h(
  $size: normal,
  $scale: tb-map-get-deep($_tb-paddings-margins, margin, vertical, scale),
  $type: margin,
  $direction: horizontal ) {
  @return tb-mg-pd($size, $scale, $type, $direction);
}

// ----------------------------------------------------------------------------
///
@function tb-pd-v(
  $size: normal,
  $scale: tb-map-get-deep($_tb-paddings-margins, padding, vertical, scale),
  $type: padding,
  $direction: vertical ) {
  @return tb-mg-pd($size, $scale, $type, $direction);
}

// ----------------------------------------------------------------------------
///
@function tb-pd-h(
  $size: normal,
  $scale: tb-map-get-deep($_tb-paddings-margins, padding, horizontal, scale),
  $type: padding,
  $direction: horizontal ) {
  @return tb-mg-pd($size, $scale, $type, $direction);
}

// ----------------------------------------------------------------------------
///
@mixin tb-mg-v($size, $important: null) {
  $important: if($important, unquote('!important'), null);
  margin-top: map-get($_tb-margin-vertical-map, $size) $important;
  margin-bottom: map-get($_tb-margin-vertical-map, $size) $important;
}

// ----------------------------------------------------------------------------
///
@mixin tb-mg-h($size, $important: null) {
  $important: if($important, unquote('!important'), null);
  margin-right: map-get($_tb-margin-horizontal-map, $size) $important;
  margin-left: map-get($_tb-margin-horizontal-map, $size) $important;
}

// ----------------------------------------------------------------------------
///
@mixin tb-pd-v($size, $important: null) {
  $important: if($important, unquote('!important'), null);
  padding-top: map-get($_tb-padding-vertical-map, $size) $important;
  padding-bottom: map-get($_tb-padding-vertical-map, $size) $important;
}

// ----------------------------------------------------------------------------
///
@mixin tb-pd-h($size, $important: null) {
  $important: if($important, unquote('!important'), null);
  padding-right: map-get($_tb-padding-horizontal-map, $size) $important;
  padding-left: map-get($_tb-padding-horizontal-map, $size) $important;
}
